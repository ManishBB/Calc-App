{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","oldExpression","setOldExpression","expression","setExpression","numerics","Set","operators","buttons","evaluationExpression","evaluate","eval","String","handleKeyUp","event","console","log","key","slice","has","className","tabIndex","onKeyUp","style","width","height","background","display","flexDirection","justifyContent","alignItems","padding","borderRadius","margin","flexWrap","map","buttonValue","idx","onClick","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s1BAIA,SAASA,MACP,cAAwCC,oDAAS,IAAjD,4LAAKC,cAAL,cAAoBC,iBAApB,cACA,WAAkCF,oDAAS,IAA3C,6LAAKG,WAAL,cAAiBC,cAAjB,cAEIC,SAAW,IAAIC,IAAI,kBACnBC,UAAY,IAAID,IAAI,QAEpBE,QAAU,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAExFC,qBAAuB,SAAvBA,uBACA,IAAIC,SAAWC,KAAKR,YACpBD,iBAAiBC,YACjBC,cAAcQ,OAAOF,YAGrBG,YAAc,SAASC,GACzBC,QAAQC,IAAIF,EAAMG,KACD,cAAdH,EAAMG,IACPb,cAAcD,WAAWe,MAAM,GAAG,IAC3Bb,SAASc,IAAIL,EAAMG,MAAQV,UAAUY,IAAIL,EAAMG,KACtDb,cAAcD,WAAaW,EAAMG,KACZ,UAAdH,EAAMG,KACbR,wBAIJ,OACE,mEAAKW,UAAU,MAAMC,SAAU,EAAGC,QAAUT,YAAaU,MAAO,CAC9DC,MAAQ,QACRC,OAAS,QACTC,WAAa,UACbC,QAAU,OACVC,cAAgB,SAChBC,eAAiB,SACjBC,WAAa,UAPf,UAUE,mEAAKP,MAAO,CACVC,MAAQ,QACRC,OAAS,QACTC,WAAa,UACbC,QAAU,OACVC,cAAgB,SAChBE,WAAa,WACbD,eAAiB,SACjBE,QAAU,OACVC,aAAe,QATjB,UAYE,0EAAK/B,gBACL,0EAAKE,gBAIP,kEAAKoB,MAAO,CACVC,MAAQ,QACRC,OAAS,OACTQ,OAAS,OACTP,WAAa,UACbC,QAAU,OACVC,cAAgB,MAChBE,WAAa,WACbD,eAAiB,SACjBE,QAAU,OACVC,aAAe,OACfE,SAAW,QAXb,SAcC1B,QAAQ2B,KAAI,SAAUC,EAAaC,GAClC,OAAO,qEAAQd,MAAO,CACpBC,MAAQ,OACRS,OAAS,OACRK,QAAS,WACS,MAAhBF,EACD3B,uBACuB,OAAhB2B,EACJjC,WAAWoC,QAAS,GACrBnC,cAAcD,WAAWe,MAAM,GAAI,IAGrCd,cAAcD,WAAaiC,IAXxB,SAcRA,YASQrC,2B,gICpFAyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpD,EAAA,EAAD,MAEFqD,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c3a0fbd.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n/*eslint-disable no-eval */\n\nfunction App() {\n  let [oldExpression, setOldExpression] = useState(\"\")\n  let [expression, setExpression] = useState(\"\");\n\n  let numerics = new Set(\".np 0123456789\");\n  let operators = new Set(\"+-*/\");\n\n  let buttons = [\"(\",\")\",\"%\",\"AC\",\"7\",\"8\",\"9\",\"/\",\"4\",\"5\",\"6\",\"*\",\"1\",\"2\",\"3\",\"-\",\"0\",\".\",\"=\",\"+\"];\n\n  let evaluationExpression = function(){\n      let evaluate = eval(expression);\n      setOldExpression(expression);\n      setExpression(String(evaluate));\n  }\n\n  let handleKeyUp = function(event){\n    console.log(event.key);\n    if(event.key === \"Backspace\"){\n      setExpression(expression.slice(0,-1));\n    }else if(numerics.has(event.key) || operators.has(event.key)){\n      setExpression(expression + event.key);\n    }else if(event.key === \"Enter\"){\n      evaluationExpression();\n    }\n  }\n  \n  return (\n    <div className=\"App\" tabIndex={0} onKeyUp= {handleKeyUp} style={{\n      width : \"100vw\",\n      height : \"100vh\",\n      background : \"#999999\",\n      display : \"flex\",\n      flexDirection : \"column\",\n      justifyContent : \"center\",\n      alignItems : \"center\"\n    }}>\n\n      <div style={{\n        width : \"400px\",\n        height : \"130px\",\n        background : \"#ffffff\",\n        display : \"flex\",\n        flexDirection : \"column\",\n        alignItems : \"flex-end\",\n        justifyContent : \"center\",\n        padding : \"20px\",\n        borderRadius : \"10px\"\n      }}>\n\n        <h6>{oldExpression}</h6>\n        <h1>{expression}</h1>\n\n      </div>\n\n      <div style={{\n        width : \"400px\",\n        height : \"auto\",\n        margin : \"20px\",\n        background : \"#ffffff\",\n        display : \"flex\",\n        flexDirection : \"row\",\n        alignItems : \"flex-end\",\n        justifyContent : \"center\",\n        padding : \"20px\",\n        borderRadius : \"10px\",\n        flexWrap : \"wrap\"\n      }}>\n\n      {buttons.map(function (buttonValue, idx){\n        return <button style={{\n          width : \"90px\",\n          margin : \"5px\"\n        }} onClick={function(){\n          if(buttonValue === \"=\"){\n            evaluationExpression();\n          }else if(buttonValue === \"AC\"){\n            if(expression.length >=1){\n              setExpression(expression.slice(0, -1));\n            }\n          }else{\n            setExpression(expression + buttonValue);\n          }\n        }}>\n      {buttonValue}</button>\n      })}\n\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}